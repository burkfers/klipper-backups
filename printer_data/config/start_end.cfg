[gcode_macro print_start]
gcode:
	{% set BED_TEMP = params.BED|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(240)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|float %}
    {% set FILTRATION = params.FILTRATION|default(0)|float %}

    CANCEL_HEAT_SOAK IMMEDIATE=1

	{% if FILTRATION > 0 %}
	    filter_stats name=nevermore_monitor
	{% endif %}

    # Start bed heating
    M140 S{BED_TEMP}
	M117 Waiting for bed temperature...
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP} MAXIMUM={BED_TEMP+5}

    {% if CHAMBER_TEMP <= 25 %} # No hot chamber required, just do a quick time based soak
        {% for timer in range(2) %}
            M117 soak: {timer|int}/2m
            G4 P60000
        {% endfor %}
		M117
    {% else %} # hot chamber required, soak
        M117 Waiting for chamber temperature...
        SET_FAN_SPEED FAN=filter speed=0.2
		SET_FAN_SPEED FAN=bed speed=1
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER_TEMP} MAXIMUM={CHAMBER_TEMP+10}
		SET_FAN_SPEED FAN=bed speed=0
        SET_FAN_SPEED FAN=filter speed=0
        M117
    {% endif %}

	#{% if printer.bed_mesh %}BED_MESH_CLEAR{% endif %} ; clear bed mesh if present

	M117 Homing...
    # Preheat nozzle to 140
    M104 S140
    # Use absolute coordinates
    G90
    # Home the printer
	G28

	# M117 Meshing...
	# BED_MESH_CALIBRATE ADAPTIVE=1

	{% if FILTRATION > 0 %}
        UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION=0 ; stop stopping the filter
        SET_FAN_SPEED FAN=filter SPEED=0.8
    {% endif %}

	M117 Waiting for nozzle temp...
    # park in the front
    G90
    G0 Z5 F1800
    G0 X{printer.toolhead.axis_minimum.x+1} Y{printer.toolhead.axis_minimum.y+1} F8000

    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP} # Wait for nozzle to heat

    M117 That's a good poopie!

    # Prime the nozzle
    G90
    #G1 X10 Y0.2 E5 F1000
    #G1 X120 E20 F1000
    G92 E0
    M83
    G0 E3 F500
    G0 X15 E5 Z0.2 F500
    G0 X25 E3 F500
    G0 X35 E3 F650
    G0 X40 E3 F800
    G0 X45 Z0.05 F8000
    G0 X50 Z0.2 F8000
    G92 E0

    G90
    M117 Tinkerbell goes brr

[gcode_macro print_end]
description: Inserted by slicer at end of print.
  Usage: PRINT_END
gcode:
    _KM_CHECK_IS_PRINTING
    M400

    G90
    G92 E0
    G1 E-5 ; retract 5 mm

    M220 S100
    M221 S100

    {% if printer.heater_bed.temperature >= 90 %} ; it was smelly
      M117 Venting...
      UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION=120
    {% else %}
      M117 Done!
    {% endif %}

	#{% if printer.bed_mesh %}BED_MESH_CLEAR{% endif %} ; clear bed mesh if present

    TURN_OFF_HEATERS
    M107; turn off fan

    # Park the toolhead and present the bed
    {% if printer.toolhead.homed_axes|lower == "xyz" %}
      G90
      G0 X110 Y110
	  G91
	  G0 Z10
	  G90
    {% endif %}
    M84 ; disable steppers
    CLEAR_PAUSE


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value

    G90
    G92 E0
    G1 E-5 ; retract 5 mm

    CLEAR_PAUSE
    #PRINT_END
    TURN_OFF_HEATERS
    M106 S0 # turn off part fan
    {% if printer.toolhead.homed_axes|lower == "xyz" %}
      G90
      G0 X110 Y110 Z100
    {% endif %}
    M84 ; disable steppers
    BASE_CANCEL_PRINT

[gcode_macro _km_check_is_printing]
variable_debug_state: False # Disables print state check for debugging.
description: Throws an error if print is not currently in progress.
gcode:
  {% if not debug_state and
        printer.idle_timeout.state|string != "Printing" and
        not (printer.virtual_sdcard|default({})).is_active|default(False) and
        not printer.pause_resume.is_paused %}
    { action_raise_error("No active print.") }
  {% endif %}

[delayed_gcode _STOP_FILTER_DELAYED]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0
    M117 Done!
