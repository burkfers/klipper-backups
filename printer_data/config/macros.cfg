[gcode_macro CENTER]
gcode:
	G90
	G0 X60 Y60 Z60 F8000

[gcode_macro HOMECENTER]
gcode:
        _status_homing
	_CG28
        _status_homing
	CENTER
        _status_ready

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        _status_homing
        G28
    {% endif %}
    _status_ready

[gcode_macro _ENSURE_EXTRUDER_TEMP]
gcode:
  {% set min_temp = params.MIN_TEMP|default(200)|int %}
  {% set target_temp = params.TARGET_TEMP|default(230)|int %}

  {% if printer.extruder.target > min_temp %}
    {% if printer.extruder.temperature < min_temp %}
      M109 S{printer.extruder.target}
    {% endif %}
  {% else %}
    M109 S{target_temp}
  {% endif %}


[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  _status_busy

  _ENSURE_EXTRUDER_TEMP

  G91
  G92 E0
  G1 E10 F200                    ; slow roll 10mm
  G1 E45 F1500                   ; fast approach meltzone
  G1 E30 F200                    ; prime nozzle with filament
  _status_ready
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}

  _ENSURE_EXTRUDER_TEMP

  SAVE_GCODE_STATE NAME=unload_state
  _status_busy
  G91
  G92 E0
  G1 E10 F300                    ; extrude a little to soften tip
  G1 E-10 F3000                  ; jerk the filament out of the melt zone
  G1 E-50 F1800                  ; retract the rest of the way
  G1 E-10 F900                   ; retract the rest of the way
  CLEAR_ACTIVE_SPOOL
  _status_ready
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set leavehotendon = params.LEAVEHOTENDON|default(0)|int %}
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
	_status_busy

#       SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
	{% if leavehotendon|int <= 0 %}
	  M104 S0                                                                            ; turn off hotend unless specifically asked to leave it on
	{% endif %}
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
#       SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        _status_printing
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro M600]
gcode:
  PAUSE LEAVEHOTENDON=1
#  {% set resume = printer['gcode_macro RESUME'] %}
#  M109 S{resume.etemp|int}
  UNLOAD_FILAMENT

[gcode_macro PARK]
gcode:
	_CG28
        G0 Z110
        G0 X110 Y110

[gcode_macro FLASH_LIGHTS]
gcode:
	{% set prev = printer["output_pin daylight"].value %}
	SET_PIN PIN=daylight VALUE=1
	G4 P150
	SET_PIN PIN=daylight VALUE={prev}
	G4 P100
	SET_PIN PIN=daylight VALUE=1
	G4 P150
	SET_PIN PIN=daylight VALUE={prev}
	G4 P100
	SET_PIN PIN=daylight VALUE=1
	G4 P150
	SET_PIN PIN=daylight VALUE={prev}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set min_temp = params.MIN_TEMP|default(230)|int %}

  SAVE_GCODE_STATE NAME=load_state
  _status_busy

  {% if printer.extruder.target > min_temp %}
    M109 S{printer.extruder.target}
  {% else %}
    M109 S{min_temp}
  {% endif %}

  G91
  G92 E0
  G1 E10 F150                    ; slow roll 10mm
  G1 E45 F1500                   ; fast approach meltzone
  G1 E15 F150                    ; prime nozzle with filament
  _status_ready
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set min_temp = params.MIN_TEMP|default(230)|int %}
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
  SAVE_GCODE_STATE NAME=unload_state
  _status_busy

  {% if printer.extruder.target > min_temp %}
    M109 S{printer.extruder.target}
  {% else %}
    M109 S{min_temp}
  {% endif %}

  G91
  G92 E0
  G1 E10 F300                    ; extrude a little to soften tip
  G1 E-10 F3000                  ; jerk the filament out of the melt zone
  G1 E-50 F1800                  ; retract the rest of the way
  G1 E-10 F900                   ; retract the rest of the way
  _status_ready
  RESTORE_GCODE_STATE NAME=unload_state


[gcode_macro M106]
rename_existing: M10699
gcode:
    {% if (params.P|int if params.P is defined else 0) != 3 %}
        # {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
        {% set speed = (params.S|int if params.S is defined else 255) %}
        #SET_FAN_SPEED FAN=fan SPEED={speed}
        M10699 S{speed}
    {% endif %}

[gcode_macro M107]
rename_existing: M10799
gcode:
    {% if (params.P|int if params.P is defined else 0) != 3 %}
        M10799
    {% endif %}
